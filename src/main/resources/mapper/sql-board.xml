<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board.board.mapper.BoardMapper">
	<select id="selectBoardList" resultType="board.dto.BoardDto">
		<![CDATA[
			SELECT 
				board_idx,
				title,
				hit_cnt,
				created_datetime
			FROM
				t_board
			WHERE
				deleted_yn != 'Y'	
			ORDER BY board_idx DESC
		]]>
	</select>
	
	<!-- 
	useGeneratedKeys 속성은 DBMS가 자동 생성키의 경우를 지원할 경우에 사용가능 
	MySQL -> Auto Increment, Oracle -> 시퀀스 테이블이 따로있기때문에 SelectKey를 이용해햐암
	  -->
	<insert id="insertBoard" parameterType="board.dto.BoardDto">
	
		<![CDATA[
			INSERT INTO t_board
			(
				board_idx,
				title,
				contents,
				created_datetime,
				creator_id
			)
			VALUES
			(
				seq_board.nextval,
				#{title},
				#{contents},
				sysdate,
				'admin'
			)
		]]>
		
		<!-- 시퀀스번호 반환(BoardServiceImple 쪽에 board.getboadIdx로 리턴값을 확인 할 수 있음)  -->
		<selectKey keyProperty="boardIdx" resultType="int">
			SELECT seq_board.currval FROM DUAL
		</selectKey>
	</insert>
	
	
	<update id="updateHitCount" parameterType="int">
		<![CDATA[
			UPDATE
				t_board
			SET
				hit_cnt = hit_cnt +1
			WHERE
				board_idx = #{boardIdx}
		]]>
	</update>
	
	
	<select id="selectBoardDetail" parameterType="int" resultType="board.dto.BoardDto">
		<![CDATA[
			SELECT 
				board_idx,
				title,
				hit_cnt,
				created_datetime
			FROM
				t_board
			WHERE
				board_idx = #{boardIdx}
		]]>
	</select>
	
	
	<update id="updateBoard" parameterType="board.dto.BoardDto">
		<![CDATA[
			UPDATE t_board SET
				title = #{title},
				contents = #{contents},
				updated_datetime = sysdate,
				updater_id = 'admin'
			WHERE
				board_idx = #{boardIdx}
		]]>
	</update>
	
	
	
	<update id="deleteBoard" parameterType="Int">
		<![CDATA[
			UPDATE t_board SET
				deleted_yn = 'Y',
				updated_datetime = sysdate,
				updater_id = 'admin'
			WHERE
				board_idx = #{boardIdx}
		]]>
	</update>
	
<!-- MySQL 구문 -->
<!--	
	<insert id="insertBoardFileList" parameterType="board.dto.BoardFileDto">
		<![CDATA[
			INSERT INTO t_file
			(
			 idx,
			 board_idx,
			 original_file_name,
			 stored_file_path,
			 file_size,
			 creator_id,
			 created_datetime
			 )
			 VALUES
		]]>
		
		<foreach collection="list" item="item" separator=",">			 
			 (
			  seq_board.nextval,
			  #{item.boardIdx},
			  #{item.originalFileName},
			  #{item.storedFilePath},
			  #{item.fileSize},
			  'admin',
			  sysdate
			 )
		</foreach>
	</insert>
-->


	<!-- Oracle 구문(시퀀스때문에 이 구문은 에러가 남) -->
	<!-- 
	<insert id="insertBoardFileList" parameterType="board.dto.BoardFileDto">
	-->
		
		<!-- VALUES가  여러개일 경우 separator가 필요함, 오라클의 경우는 여백이 separator임 -->
		<!-- INSERT ALL을 사용함 -->

<!--
		<foreach collection="list" item="item" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">			 
		   <![CDATA[
		    INTO t_file
			(
			 idx,
			 board_idx,
			 original_file_name,
			 stored_file_path,
			 file_size,
			 creator_id,
			 created_datetime
			 )
			 
			 VALUES
			 (
			  seq_board.nextval,
			  #{item.boardIdx},
			  #{item.originalFileName},
			  #{item.storedFilePath},
			  #{item.fileSize},
			  'admin',
			  sysdate
			 )	]]>
		</foreach>
	</insert>
	-->
	
	<!-- Oracle에서 업로딩 구문(sequence를 이용해야하기 때문에 foreach문 밖으로 뺐음) -->
	<insert id="insertBoardFileList" parameterType="board.dto.BoardFileDto">
		<!-- VALUES가  여러개일 경우 separator가 필요함, 오라클의 경우는 여백이 separator임 -->
		INSERT INTO t_file
		(
			 idx,
			 board_idx,
			 original_file_name,
			 stored_file_path,
			 file_size,
			 creator_id,
			 created_datetime
		)
		
		SELECT seq_board.nextval, A.* FROM(
		<foreach collection="list" item="item" separator="UNION ALL ">			 
		SELECT
			  #{item.boardIdx} as boardIdx,
			  #{item.originalFileName} as original_file_name,
			  #{item.storedFilePath} as stored_file_path,
			  #{item.fileSize} as file_size,
			  'admin',
			  sysdate
			 FROM dual
		</foreach>) A
	</insert>
	
	<!-- 업로드된 파일 불러오기 -->
	<select id="selectBoardFileList" parameterType="int" resultType="board.dto.BoardFileDto">
		<![CDATA[
			SELECT
				idx,board_idx, original_file_name,
				ROUND((file_size/1024), 0) AS file_size
			FROM
				t_file
			WHERE
				board_idx = #{boardIdx}
				AND deleted_yn = 'N'
		]]>
	</select>
	
	
	<!-- 파일의 정보 조회 -->
	<select id="selectBoardFileInformation" parameterType="map"
	 resultType="board.dto.BoardFileDto">
	 	<![CDATA[
	 		SELECT
	 			original_file_name,
	 			stored_file_path,
	 			file_size
	 		FROM
	 			t_file
	 		WHERE
	 			idx = #{idx}
	 			AND board_idx = #{boardIdx}
	 			AND deleted_yn = 'N'
	 	]]>
	 </select>

</mapper>